<?php

chdir(__DIR__ . '/../../');
require_once './PEAR_Setting/BreakpointDebugging_MySetting.php';

use \BreakpointDebugging as B;

B::checkUnitTestExeMode();

/**
 * Test class for BreakpointDebugging_InAllCase.
 * Generated by PHPUnit on 2012-09-30 at 16:24:30.
 */
class BreakpointDebugging_InAllCaseTest extends PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers BreakpointDebugging_InAllCase::registerNotFixedLocation
     * @todo Implement testRegisterNotFixedLocation().
     */
    public function testRegisterNotFixedLocation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::addValuesToTrace
     * @todo Implement testAddValuesToTrace().
     */
    public function testAddValuesToTrace()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::outputErrorCallStackLog
     * @todo Implement testOutputErrorCallStackLog().
     */
    public function testOutputErrorCallStackLog()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::convertMbString
     * @todo Implement testConvertMbString().
     */
    public function testConvertMbString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::mkdir
     * @todo Implement testMkdir().
     */
    public function testMkdir()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::fopen
     * @todo Implement testFopen().
     */
    public function testFopen()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::compressIntArray
     */
    public function testCompressIntArray()
    {
        try {
            $intArray = array ();
            for ($count = 0; $count <= 400; $count++) {
                $intArray[] = $count;
            }
            $pFile = fopen('test.bin', 'w+b');
            // Adds "\r\n" For data reading by "fgets()" in Windows and Unix and Mac.
            fwrite($pFile, B::compressIntArray($intArray) . "\r\n");
            fwrite($pFile, B::compressIntArray($intArray) . "\r\n");
            fflush($pFile);
            rewind($pFile);
            while ($intResultArray = B::decompressIntArray(fgets($pFile))) {
                $this->assertTrue($intArray === $intResultArray);
            }
            fclose($pFile);
        } catch (\Exception $exception) {
            $this->assertTrue(false);
            return;
        }
        $this->assertTrue(true);
    }

    /**
     * @covers BreakpointDebugging_InAllCase::decompressIntArray
     * @todo Implement testDecompressIntArray().
     */
    public function testDecompressIntArray()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::autoload
     * @todo Implement testAutoload().
     */
    public function testAutoload()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::exceptionHandler
     * @todo Implement testExceptionHandler().
     */
    public function testExceptionHandler()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::errorHandler
     * @todo Implement testErrorHandler().
     */
    public function testErrorHandler()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::_internal
     * @todo Implement test_internal().
     */
    public function test_internal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::internalAssert
     * @todo Implement testInternalAssert().
     */
    public function testInternalAssert()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::internalException
     * @todo Implement testInternalException().
     */
    public function testInternalException()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging_InAllCase::shutdown
     * @todo Implement testShutdown().
     */
    public function testShutdown()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

}

?>
