<?php

chdir(__DIR__ . '/../../');
require_once './PEAR_Setting/BreakpointDebugging_MySetting.php';

use \BreakpointDebugging as B;

B::checkUnitTestExeMode();

/**
 * Test class for BreakpointDebugging.
 * Generated by PHPUnit on 2012-09-30 at 16:24:29.
 */
class BreakpointDebuggingTest extends PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers BreakpointDebugging::__destruct
     * @todo Implement test__destruct().
     */
    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::convertMbStringForDebug
     * @todo Implement testConvertMbStringForDebug().
     */
    public function testConvertMbStringForDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::iniSet
     * @todo Implement testIniSet().
     */
    public function testIniSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::iniCheck
     * @todo Implement testIniCheck().
     */
    public function testIniCheck()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::getPropertyForTest
     */
    public function testGetPropertyForTest()
    {
        global $_BreakpointDebugging;

        $this->assertTrue(B::getPropertyForTest('BreakpointDebugging_InAllCase', 'LOCAL_DEBUG') === 1); // Constant property.
        $this->assertTrue(B::getPropertyForTest('BreakpointDebugging_InAllCase', '$_handlerOf') === 'none'); // Private static property.
        $this->assertTrue(B::getPropertyForTest($_BreakpointDebugging, '$_onceFlag') === array ()); // Private auto property.
        try {
            B::getPropertyForTest($_BreakpointDebugging, '$_handlerOf'); // Private static property of base class.
        } catch (\BreakpointDebugging_UnitTest_Exception $e) {
            $this->assertTrue(true);
            return;
        }
        $this->assertTrue(false);
    }

    /**
     * @covers BreakpointDebugging::setPropertyForTest
     */
    public function testSetPropertyForTest()
    {
        global $_BreakpointDebugging;

        B::setPropertyForTest('BreakpointDebugging_InAllCase', '$_handlerOf', 'change'); // Private static property.
        $this->assertTrue(B::getPropertyForTest('BreakpointDebugging_InAllCase', '$_handlerOf') === 'change');
        B::setPropertyForTest($_BreakpointDebugging, '$_onceFlag', array ('change')); // Private auto property.
        $this->assertTrue(B::getPropertyForTest($_BreakpointDebugging, '$_onceFlag') === array ('change'));
        try {
            B::setPropertyForTest($_BreakpointDebugging, '$_handlerOf', 'change'); // Private static property of base class.
        } catch (\BreakpointDebugging_UnitTest_Exception $e) {
            $this->assertTrue(true);
            return;
        }
        $this->assertTrue(false);
    }

    /**
     * @covers BreakpointDebugging::makeUnitTestException
     * @todo Implement testMakeUnitTestException().
     */
    public function testMakeUnitTestException()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::checkUnitTestExeMode
     * @todo Implement testCheckUnitTestExeMode().
     */
    public function testCheckUnitTestExeMode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::executeUnitTest
     * @todo Implement testExecuteUnitTest().
     */
    public function testExecuteUnitTest()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BreakpointDebugging::displayVerification
     * @todo Implement testDisplayVerification().
     */
    public function testDisplayVerification()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
        'This test has not been implemented yet.'
        );
    }

}

?>
