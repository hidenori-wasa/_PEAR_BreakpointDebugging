The basic concept
    This makes it possible to do breakpoint debugging.

The features list
    ### Environment which can do breakpoint debugging. ###
    For example, in case of windows environment, there is "VS.Php" debugger.

    ### The advantage of breakpoint debugging. ###
    it is to be able to find a position of a bug immediately.
    In addition to it, condition of variable can be examined.
    Therefore, it is possible to do debugging quickly.

    ### How to do breakpoint debugging coding. ###
    We have to do coding as follows to process in "BreakpointDebugging" class.
    We have to verify a impossible return value of PHP function with "assert()".
    We have to verify a impossible value of your code.
    We have to do coding "throw new PEAR_Exception()" into error handling which possibility exists.
    Or, we have to throw object of derived class of PEAR_Exception class.
    We have to do coding "assert(false)" at "catch()" of a exception handling.
    But, exception handling which did Fix had better delete "assert(false)".
    Also, an error by PHP function and an exception which wasn't caught are processed in "BreakpointDebugging" class too.

    ### The execution procedure. ###
    Procedure 1: Please, copy BreakpointDebugging_MySetting.php as your project php file.
    Procedure 2: Please, edit BreakpointDebugging_MySetting.php for customize.
    Then, it is possible to make specific setting about all debugging modes.
    Procedure 3: Please, set a breakpoint into BreakpointDebugging_breakpoint() of BreakpointDebugging_MySetting.php.
    Procedure 4: Please, set debugging mode to $_BreakpointDebugging_EXE_MODE.
    Procedure 5: Please, register at top of the function or method to have been not fixed. Therefore, copy following.
    "static $isRegister; BreakpointDebugging::registerNotFixedLocation( $isRegister); // Register the function to be not fixed."
    Then, it is possible to discern function or method which does not fix with browser screen or log.

    ### The debugging mode which we can use. ###
    First "LOCAL_DEBUG" mode is breakpoint debugging with local personal computer.
    Second "LOCAL_DEBUG_OF_RELEASE" mode is breakpoint debugging to emulate release with local personal computer.
    Third "REMOTE_DEBUG" mode is browser display debugging with remote personal computer.
    Last "RELEASE" mode is log debugging with remote personal computer, and we must set on last for security.

    ### Useful function index. ###
    This changes a character sets to display a multibyte character string with local window of debugger, and this returns it.
        final static function BreakpointDebugging::convertMbStringForDebug($params)
    This changes to unify multibyte character strings such as system-output in UTF8, and this returns.
        final static function BreakpointDebugging::convertMbString($string)

The dependences
    none.

Notice
    At present, I am creating the exception handling of the remainder.
    First is the support to the case where the exception handling is continuing.
    Second is that this changes error handling which calls "BreakpointDebugging::triggerError()" to be based on coding standard by throwing derivation error exception of "PEAR_Exception".
